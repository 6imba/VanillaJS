# Keyword for variable declaration&defination in JS:
    - nothing
    - var
    - let
    - const

# attributes of variable that is determined on the basis of keyword used to declaration&defination it :
    - only declaration
    - define/assign value later
    - re-declaration
    - re-assign
    - scope
    - hoisting

---------------------------------------------------------------------------------------------------------------

# attributes on the basis of keyword:
    > var:
        - global-scope(not incase of function)
        - possible to declare only.
        - re-declare in same scope
        - re-assigned.
        - default
        - Declared after use.
        - hoisted-top and initialized-anytime, default, declare-after.

    > let:
        - block scope
        - possible to declare only.
        - no re-declare same scope
        - reassigned.
        - Declared before use.
        - hoisted-top but not initialized,

    > const:
        - block scope
        - not possible to declare only(declare and assign at the same time).
        - no re-declare.
        - no re-assigned.
        - Declared before use.
        - Must Declare and Define at same time.

# Summary of attributes of  variable keyword:
    > const: declare and initialize at the same statment/line.
    > var & let declaring first and assigning later is possible.

    > const: not possible to re-assign 
    > let and var: possible to re-assign.

    > const and let no redeclaration.
    > var is possible to redeclare.

    > var: has global scope.
    > const & let: has bloack scope.

    - let y;//declare
    - let y = 1; // re-declare & assign (to define value you dont need to write keyword again, if you write keyword the it means you to declaring variable)

---------------------------------------------------------------------------------------------------------------

Q. So, when to use var? when to use let? when to use const?
    1. always try to use const at first place if possible when should not be change/re-assign later.
    2. if not const try let as it has TDZ as const, so that you should never face unexpected undefined error.
    3. never use var expect some exception cases.

---------------------------------------------------------------------------------------------------------------
