- var, let, const are the keyword that defines the scope of variable.
- variable declared with var keyword has global scope. Means it is attached with global_window_object.(global variables belong to the window object.)
- You can use export/import keyword to use global variables of one file/module into another.

- All globle variables declare with var keyword outside function are considers as properties of window_object. 

Q. is a_file and window same?
- Global variables can be used (and changed) by all scripts in the page (and in the window).
- script vs file vs page vs document vs window vs module?

- Variables created with (var, let, or const) declaration keywords are always local to function and has local/function scope.
- Variables created without a declaration keyword (var, let, or const) are always global, even if they are created inside a function.
- Variables created with declaration keyword (var) are always global, but if they are created inside a function they have local/function scope whereas if they are created inside a block{} they have global scope.
- Variables created with declaration keyword (let and const) are always local to block{} and have block scope.

# Global:
	- A global variable has Global Scope.
	- Global variables can be accessed from anywhere within_a_same_JavaScript_program/file and from_a_another_JavaScript_program/file incase of import&export.
	- Variables created with a declaration keyword (var) are always global. (but if they are created inside a function they are local).
	- Variables created without a declaration keyword (var, let, or const) are always global. (even if they are created inside a function).

# Local: Function or Block.
	- A local variable has either Local or Block Scope.
	- A local variable of function has a function scope.  ==> function foo (){}
	- A local variable of block{} has a block scope.  ==> if(){}, switch(){}, for(){}, while(){}, do{}.
	- Variables created with a declaration keyword (let & const) are always local.
	- local variable declared inside function has function scope.
	- local variable declared inside block(){} has block scope.

# Variables created with a declaration keyword (var) inside block(){} are always global.
# Variables created with a declaration keyword (var) inside function{} are always local.



# Test:

if(true){
  let x = 2;
}
alert(x)
--------------------------------
if(true){
  var x = 2;
}
alert(x)
--------------------------------
myFunction();
alert(x)
function myFunction() {
  x = 2;
  //var x = 2;
  //let x = 2;
  //const x = 2;
}
--------------------------------

- Variable Lifetime?
- 