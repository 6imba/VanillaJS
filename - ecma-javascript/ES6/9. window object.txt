# Browser -> Window -> HTML_Document -> Elements.

# Global Object:
	- Global_Scope in Browser has a only global_object, called window.
	- And every global variable we declared in our script is attached to the global_window_object as it's property,
	- which means we can access them either by window.varname or simply just with varname without any prefix_window.
	- window ~ browser_tab && document ~ web_page

# Simply, in a web browser: Window is a Global_Object with Global_Scope.

- The global_window_object represents the browser's window/tab. It represents an open window/tab in a browser. It supports all browsers.
- And HTML_document_object, itself is one of the property of global_window_object.
- Note: Unlike var, the statements let and const do not create properties of the global object.(See explanation in 5.Hoisting and 6.Temporal Death Zone)

- In a web browser, when scripts create global variables(function,object,array,primitive_datatype) defined with the var keyword or no keword at all, then they're created as members of the global object.
	> var foo = "foobar";
	> foo === window.foo;

	> foo = "foobar";
	> foo === window.foo;
	- After defining a Global Variable foo, we can access its value directly from the window object, by using the variable name foo as a property name of the Global_Object --> window.foo.
- All global variable are placed as a property of global_window_object and cann be accessed without prefix(window.foo)

- In JavaScript, a screen_object is built-in property of global_window_object that holds information of browser screen on which the current window/tab/page is being rendered.
- global_window_object holds all global_variable(predefine/userdefined):having global_scope which can be access without prefix(window.foo).

# Screen vs Window vs Document:
	- screen: device_screen,
	- window: browser_window/tab,
	- document: a_HTML_document/a_Webpage

	- even when you minimize the browser, screen object is same as it refers to the system moniter regardless of browser's window.
	- window refer's to browser whole interface.
	- screen refer's to device monitor.
	- document refer's to any file either html,json,xml being rendered in document.

# Window {0:Window, window:Window, self:Window, alert:f alert(), fetch: f(), localStorage: Storage{}, sessionStorage: Storage{}, onclick:null, onchnage:null, setInterval: ƒ setInterval(), setTimeout: ƒ setTimeout(), screen:Screen{}, Infinity: Infinity, parseFloat: ƒ parseFloat(), parseInt: ƒ parseInt(), Date: ƒ Date() }
	Q. Is window object natibe built-in object of javascript?
		- No! absolutely not.
		- Window is the object of browser, it is not the object of javascript.
		- The javascript objects are string, array, date etc.
		- At the time JavaScript is executed all JavaScript global_variables gets attached with browser's window_object as it's properties.

# Global object are the objects having global scope(avialable from anywhere).
	Q. How to define global object?
	Q. Where are global object placed?

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Reference: https://developer.mozilla.org/en-US/docs/Glossary/Global_object
