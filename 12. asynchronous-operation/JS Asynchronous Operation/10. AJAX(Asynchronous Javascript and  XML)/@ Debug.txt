# XMLHttpRequest vs  Fetch API
    - fetch() allows you to make network requests similar to XMLHttpRequest (XHR). The main difference is that the Fetch API uses Promises, which enables a simpler and cleaner API, avoiding callback hell and having to remember the complex API of XMLHttpRequest.


# 1. HTTP-Request & Response-Status-Code:
# Status == 0
    <body>
        <h3>XMLHttpResponse Object</h3>
        <button id="getDataBtn">Load Data</button>
        <script>

            function loadData(method, url){
                const xhr = new XMLHttpRequest();
                xhr.open(method, url);
                // xhr.open(method, url, true); // async true by default.
                if(xhr.status == 0){
                    console.log('Error: ',xhr.status)
                }else{
                    xhr.responseType = "json";
                    xhr.onload = () => {
                        if(xhr.status == 200){
                            console.log(xhr.response)
                        }
                    };
                }
                xhr.send();
            }

            const getBtn = document.getElementById("getDataBtn");
            getBtn.addEventListener("click", ()=>loadData('GET', 'https://req'));
        </script>
    </body>


# 2.
