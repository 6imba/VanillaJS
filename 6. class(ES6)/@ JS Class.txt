# JavaScirpt Class:
    - ECMAScript 2015, also known as ES6, introduced JavaScript Classes.
    - JavaScript Classes are templates|blueprint for JavaScript Objects.

# JavaScript Class Syntax:  
    - Use the keyword class to create a class.
    - Always add a method named constructor():
        - Syntax:
            class ClassName {
            constructor() { ... }
            }
        - Example:
            class Car {
                constructor(name, year) {
                    this.name = name;
                    this.year = year;
                }
            }
        - Instanciate Class's object:
            let myCar1 = new Car("Ford", 2014);
            let myCar2 = new Car("Audi", 2019);

# The Constructor Method:
    - The constructor method is called automatically when a new object is created, used to initialize object default properties.
    - If you do not define a constructor method, JavaScript will add an empty constructor method.

# Class Properties & Methods:
    - Class methods are created with the same syntax as object methods.

# Object propertie&method vs Class propertie&method:
    * Object:
    -   const person = {
            firstName: "John",
            lastName: "Doe",
            id: 5566,
            fullName: function() {
                return this.firstName + " " + this.lastName;
            }
            age: function(todayDate) {
                return todayDate - this.lastName;
            }
        };

    * Class:
    -   class Person {
            constructor(name, year) {
                this.firstName = fname;
                this.lastName = lname;
                this.bod = id;
            }
            fullName() {
                return this.firstName + " " + this.lastName;
            }
            age(todayDate) {
                return todayDate - this.bod;
            }
        }

# class & object method without parameters: fullName
# class & object method with parameters: age

# Class Inheritance:
    - To create a class inheritance, use the extends keyword.
    - syntax:
        class Class1 {
            constructor(arg1) {
                this.property1 = arg1;
            }
            method1() {
                return 'I have a ' + this.property1;
            }
        }

        class Class2 extends Class1 {
            constructor(arg1, arg2) {
                super(arg1);
                this.property2 = arg2;
            }
            method2() {
                return this.method1() + ', it is a ' + this.property2;
            }
        }

    - To create a class inheritance, use the extends keyword.
    - The super() method refers to the parent class.

# A child class constructor should always have super method.

class Car {
  present() {
    return 'I have a ';
  }
}

class Model extends Car {
  constructor(mod) {
    super();
    this.model = mod;
  }
  show() {
    return this.present() + ', it is a ' + this.model;
  }
}

let myCar = new Model("Ford", "Mustang");
document.getElementById("demo").innerHTML = myCar.show();



// // The super() method refers to the parent class.
// // By calling the super() method in the constructor method, we call the parent's constructor method and gets access to the parent's properties and methods.
// // Inheritance is useful for code reusability: reuse properties and methods of an existing class when you create a new class.
